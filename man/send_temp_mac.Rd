% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/send_temp_mac.R
\name{send_temp_mac}
\alias{send_temp_mac}
\title{Send Temp Queries with Mac}
\usage{
send_temp_mac(teradata_connection, temp_query)
}
\arguments{
\item{teradata_connection}{A teradata connection created by `odbc::dbConnect()`}

\item{query}{A string containing one or multiple temp queries}
}
\value{

}
\description{
Used to run temp table aka "volatile table" queries from R. \cr
Step 1: Use send_temp_mac() to send temp queries to teradata. \cr
Step 2: Query your temp table(s) using odbc::dbGetQuery() as normal.
}
\examples{
# Establish connection to teradata
td_con <- dbConnect(odbc::odbc(), "TDXMXF129_64")

# Temp query
temp_query <- "CREATE VOLATILE MULTISET TABLE origination_df AS (
	 SELECT top 100 *
	 FROM DLFIN_FA.monthly_sales_t
 )
WITH DATA PRIMARY INDEX(level_1, level_2, level_3, fiscper) ON  COMMIT  PRESERVE ROWS;

---- Fulfillment data
CREATE VOLATILE MULTISET TABLE fulfillment_df AS (
	 SELECT top 100 *
	 FROM DLFIN_FA.monthly_sales_t
 )
WITH DATA PRIMARY INDEX(level_1, level_2, level_3, fiscper) ON  COMMIT  PRESERVE ROWS;"

# Send the temp queries
send_temp(td_con, temp_query)

# Run final query
final_query <- "select top 100 *
from TDXMXF129.origination_df"
sales_df <- odbc::dbGetQuery(td_con, final_query) \%>\% as_tibble()
}
